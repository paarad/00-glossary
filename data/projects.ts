export type Project = {
  number: string;      // e.g. "01"
  id: string;          // e.g. "image-to-story"
  name: string;        // e.g. "Image to Story"
  url: string;         // e.g. "https://01-image-to-story.paarad.org"
  description: string; // one-liner
  stack: string;       // tech stack
};

export const projects: Project[] = [
  {
    number: "01",
    id: "image-to-story",
    name: "Image to Story",
    url: "https://01-image-to-story.paarad.org",
    description: "Generate a short story from any image using AI.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "02",
    id: "market-sentiment-feed",
    name: "Market Sentiment Feed",
    url: "https://02-market-sentiment-feed.paarad.org",
    description: "Live crypto market sentiment powered by AI analysis.",
    stack: "Next.js, Tailwind, OpenAI, Market APIs",
  },
  {
    number: "03",
    id: "coincerto",
    name: "Coincerto",
    url: "https://03-coincerto.paarad.org",
    description: "Tokenomics breakdowns and token pages via GPT.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "04",
    id: "dao-proposal-tldr",
    name: "DAO Proposal TL;DR",
    url: "https://04-dao-proposal-tldr.paarad.org",
    description: "Summarize governance proposals into digestible TL;DRs.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "05",
    id: "pfpmask",
    name: "PFPmask",
    url: "https://05-pfpmask.paarad.org",
    description: "Mask and restyle your PFP without uploading your face.",
    stack: "Next.js, Tailwind, Image Models",
  },
  {
    number: "06",
    id: "jeandelafontaine",
    name: "Jean de la Fontaine",
    url: "https://06-jeandelafontaine.paarad.org",
    description: "Create AI-generated poems in the style of La Fontaine.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "07",
    id: "deadticker",
    name: "DeadTicker",
    url: "https://07-deadticker.paarad.org",
    description: "Track and visualize abandoned or dead crypto tokens.",
    stack: "Next.js, Tailwind, Coin Data APIs",
  },
  {
    number: "08",
    id: "hopium-calculator",
    name: "Hopium Calculator",
    url: "https://08-hopium-calculator.paarad.org",
    description: "Playful degen calculator for hopium-based predictions.",
    stack: "Next.js, Tailwind",
  },
  {
    number: "09",
    id: "pfp-masquerade",
    name: "PFP Masquerade",
    url: "https://09-pfp-masquerade.paarad.org",
    description: "High-quality, face-free PFP style morphing for memes & NFTs.",
    stack: "Next.js, Tailwind, Image Models",
  },
  {
    number: "10",
    id: "cope-station",
    name: "Cope Station",
    url: "https://10-cope-station.paarad.org",
    description: "Copium quotes generated by AI for degens on the brink.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "11",
    id: "autoflex",
    name: "Autoflex",
    url: "https://11-autoflex.paarad.org",
    description: "Auto-generate Twitter flex posts from simple prompts.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "12",
    id: "shillgospel",
    name: "ShillGospel",
    url: "https://12-shillgospel.paarad.org",
    description: "AI-generated over-the-top shill threads for satire & fun.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  {
    number: "13",
    id: "brandkit",
    name: "BrandKit",
    url: "https://13-brandkit.paarad.org",
    description: "Create text-based AI logos for brands and memes.",
    stack: "Next.js, Tailwind, OpenAI, DALLÂ·E",
  },
  {
    number: "14",
    id: "genframes",
    name: "GenFrames",
    url: "https://14-genframes.paarad.org",
    description: "Storyboard generator with frame timing, captions, and scenes.",
    stack: "Next.js, Tailwind, OpenAI",
  },
  // Placeholder projects for the remaining ones (15-30)
  // Add your actual projects here as you build them
  ...Array.from({ length: 16 }, (_, i) => ({
    number: String(i + 15).padStart(2, '0'),
    id: `project-${String(i + 15).toLowerCase()}`,
    name: `Project ${i + 15}`,
    url: `https://${String(i + 15).padStart(2, '0')}-project-${String(i + 15).toLowerCase()}.paarad.org`,
    description: `Coming soon - Project ${i + 15}`,
    stack: "Next.js, React, TypeScript"
  }))
] as const;

// Helper function to get preview image URL
export const getPreviewImageUrl = (project: Project): string => {
  // Use internal screenshot proxy to avoid per-app og.png maintenance
  return `/api/preview?url=${encodeURIComponent(project.url)}&w=1200`;
};

// Helper function to get a placeholder image URL for testing
export const getPlaceholderImageUrl = (project: Project): string => {
  // Create a data URL with SVG for reliable local placeholder
  const svg = `<svg width="800" height="400" xmlns="http://www.w3.org/2000/svg">
    <rect width="800" height="400" fill="#2563eb"/>
    <text x="400" y="180" font-family="Inter, Arial, sans-serif" font-size="32" font-weight="600" 
          fill="white" text-anchor="middle">${project.number}. ${project.name}</text>
    <text x="400" y="220" font-family="Inter, Arial, sans-serif" font-size="18" 
          fill="#93c5fd" text-anchor="middle">${project.stack}</text>
    <text x="400" y="260" font-family="Inter, Arial, sans-serif" font-size="14" 
          fill="#dbeafe" text-anchor="middle">Preview Coming Soon</text>
  </svg>`;
  return `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;
}; 